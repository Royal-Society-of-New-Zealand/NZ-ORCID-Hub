version: '2.1'
services:
  db:
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD
      - PGPASSWORD
    domainname: orcidhub.org.nz
    hostname: db
    ports:
      - "${PGPORT:-5432}:5432"
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - ./conf/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
      - ./pgdata:/var/lib/postgresql/data
      - ./backup:/backup
      - ./archive:/archive
      - ${HOME}:${HOME}
    user: "${USER_UID:-500}:${USER_GID:-500}"
    restart: always

  app:
    depends_on:
      - db
    image: orcidhub/app-dev
    environment:
      - ENV
      - SHIB_SP_DOMAINNAME
      - TOKEN_PASSWORD_SALT
      - MAIL_DEFAULT_SENDER
      - TOKEN_SECRET_KEY
      - DATABASE_URL
      - SECRET_KEY
      - ORCID_CLIENT_ID
      - ORCID_CLIENT_SECRET
      - SENTRY_DSN
    domainname: orcidhub.org.nz
    hostname: app
    ports:
      - "${EXTERNAL_PORT:-80}:80"
      - "${EXTERNAL_SSL_PORT:-443}:443"
    volumes:
      - .:/src
      - .:/var/www/orcidhub/
      - ./run-app:/usr/local/bin/run-app
      - ./app.conf:/etc/httpd/conf.d/ZZ-app.conf
      - ./conf/attribute-map.xml:/etc/shibboleth/attribute-map.xml
      - ./tuakiri-test-metadata-cert.pem:/etc/shibboleth/tuakiri-test-metadata-cert.pem
      - ./tuakiri-metadata-cert.pem:/etc/shibboleth/tuakiri-metadata-cert.pem
      - ./.keys:/.keys
      - ./conf:/conf
    restart: always

  redis:
    image: 'redis'
    restart: always

  sentry:
    image: 'sentry:latest'
    depends_on:
      - 'redis'
      - 'db'
    ports:
      - '9000:9000'
    environment:
      - SENTRY_SECRET_KEY
      - SENTRY_POSTGRES_HOST
      - SENTRY_POSTGRES_PORT
      - SENTRY_DB_NAME
      - SENTRY_DB_USER
      - SENTRY_DB_PASSWORD
      - SENTRY_REDIS_HOST
      - POSTGRES_PASSWORD
      - PGPASSWORD
    volumes:
      - ./conf/init-user-db.sh:/docker-entrypoint-initdb.d/init-user-db.sh
    restart: always

  sentry_worker:
    image: 'sentry:latest'
    depends_on:
      - 'redis'
      - 'db'
    command: "sentry run worker"
    environment:
      - SENTRY_SECRET_KEY
      - SENTRY_POSTGRES_HOST
      - SENTRY_POSTGRES_PORT
      - SENTRY_DB_NAME
      - SENTRY_DB_USER
      - SENTRY_DB_PASSWORD
      - SENTRY_REDIS_HOST
    restart: always

  sentry_cron:
    image: 'sentry:latest'
    depends_on:
      - 'redis'
      - 'db'
    command: "sentry run cron"
    environment:
      - SENTRY_SECRET_KEY
      - SENTRY_POSTGRES_HOST
      - SENTRY_POSTGRES_PORT
      - SENTRY_DB_NAME
      - SENTRY_DB_USER
      - SENTRY_DB_PASSWORD
      - SENTRY_REDIS_HOST
    restart: always
